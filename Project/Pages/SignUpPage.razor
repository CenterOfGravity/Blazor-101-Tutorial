@layout EmptyLayout
@page "/SignUpPage"
@inject NavigationManager NavigationManager
@inject IJSRuntime js

<img class="logo"
     src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png' />

<div class='sign-up'>
    <h2>Crear Cuenta</h2>

    <EditForm Model="SignUpClassModel" OnValidSubmit="SignUpOnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationMessage For="@(() => SignUpClassModel.Name)" />
        <ValidationMessage For="@(() => SignUpClassModel.Email)" />
        <ValidationMessage For="@(() => SignUpClassModel.Password)" />
        <ValidationMessage For="@(() => SignUpClassModel.ConfirmPassword)" />

        <label>Nombre:</label>
        <InputText class="input-text" type='text' @bind-Value="SignUpClassModel.Name" />

        <label>Correo:</label>
        <InputText class="input-text" type='email' @bind-Value="SignUpClassModel.Email" />


        <label>Contraseña:</label>
        <InputText class="input-text" type='password' @bind-Value="SignUpClassModel.Password" />

        <label>Confirmar Contraseña:</label>
        <InputText class="input-text" type='password' @bind-Value="SignUpClassModel.ConfirmPassword" />

        <input disabled="@IsSignUpButtonDisabled" type='submit' value="Verificar correo electrónico" />
    </EditForm>


    <p> Al continuar, aceptas las
        <a> condiciones de uso</a> y 
        <a>aviso de privacidad</a>.</p>

    <div class="line"></div>

    <div class="already_have_an_account">
        ¿Tiene ya una cuenta?
        <a style="text-decoration:underline" @onclick="GoToSignInPageOnClick">Inicia Sesión</a>
    </div>

</div>


@*SignInCode-Start*@
@code {
    private void GoToSignInPageOnClick()
    {
        NavigationManager.NavigateTo("SignInPage");
    }
}
@*SignInCode-End*@


@*SignUpCode-Start*@
@code {
    private SignUpClassModel SignUpClassModel = new SignUpClassModel();
    private bool IsSignUpButtonDisabled;
    private async void SignUpOnValidSubmit()
    {
        IsSignUpButtonDisabled = true;
        if ( await js.InvokeAsync<bool>("CreateUserWithEmailAndPassword", SignUpClassModel.Email, SignUpClassModel.Password))
        {
            NavigationManager.NavigateTo($"EmailVerificationPage/{SignUpClassModel.Email}");
        }
        SignUpClassModel.Password = string.Empty;
        SignUpClassModel.ConfirmPassword= string.Empty;
        IsSignUpButtonDisabled = false;
    }
}
@*SignUpCode-End*@
