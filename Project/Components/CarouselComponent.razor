@inject IJSRuntime js

<div class="container" @onmouseleave="OnMouseLeave" >
    <i class="bi bi-chevron-left" style="@LeftArrowCssCode" @onclick="@(() => ArrowOnClick("Left"))"></i>
    <div id="@carousel" class="carousel @SnapTypeCssClassName"
         @onmousedown="OnMouseDown" @onmousemove="OnMouseMove" @onmouseup="OnMouseUp"
         @ontouchstart="OnTouchStart" @ontouchmove="OnTouchMove" @ontouchend="OnMouseUp">
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71P1nZa-IsL._SX466_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71d3wJAXuFL._AC_UL320_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/511OU9aET6L._SX466_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/811Q8CZTzhL._AC_SX522_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/611B25E53dL._AC_SX522_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71GY-XhzDpL._AC_SX679_.jpg" />

        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71P1nZa-IsL._SX466_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/511OU9aET6L._SX466_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71d3wJAXuFL._AC_UL320_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/811Q8CZTzhL._AC_SX522_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/611B25E53dL._AC_SX522_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71GY-XhzDpL._AC_SX679_.jpg" />

        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71P1nZa-IsL._SX466_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/511OU9aET6L._SX466_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71d3wJAXuFL._AC_UL320_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/811Q8CZTzhL._AC_SX522_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/611B25E53dL._AC_SX522_.jpg" />
        <ProductCard CurrentScrollPosition="CurrentScrollPosition" ImgUrl="https://m.media-amazon.com/images/I/71GY-XhzDpL._AC_SX679_.jpg" />
    </div>
    <i class="bi bi-chevron-right" style="@RightArrowCssCode" @onclick="@(() => ArrowOnClick("Right"))"></i>
</div>

@*CarouselCode-Start*@
@code {
    private string carousel = Guid.NewGuid().ToString("N");
    private bool IsMouseDown;
    private double PrevPageX, CurrentScrollPosition;

    private async Task OnMouseDown(MouseEventArgs e)
    {
        SnapTypeCssClassName = string.Empty;
        IsMouseDown = true;

        PrevPageX = e.PageX;

        CurrentScrollPosition = await js.InvokeAsync<double>("GetScrollLeft", carousel);
    }

    private async Task OnTouchStart(TouchEventArgs e)
    {
        SnapTypeCssClassName = string.Empty;
        IsMouseDown = true;

        PrevPageX = e.Touches[0].PageX;

        CurrentScrollPosition = await js.InvokeAsync<double>("GetScrollLeft", carousel);
    }

    private async Task OnMouseMove(MouseEventArgs e)
    {
        if (IsMouseDown)
        {
            var MouseMovementRange = e.PageX - PrevPageX;
            await js.InvokeVoidAsync("SetScrollLeft", carousel, CurrentScrollPosition - MouseMovementRange);
        }
    }

    private async Task OnTouchMove(TouchEventArgs e)
    {
        if (IsMouseDown)
        {
            var MouseMovementRange = e.Touches[0].PageX - PrevPageX;
            await js.InvokeVoidAsync("SetScrollLeft", carousel, CurrentScrollPosition - MouseMovementRange);
        }
    }

    private async Task OnMouseUp()
    {
        IsMouseDown = false;
        await HideOrShowArrrowIcons();
    }

    private async Task OnMouseLeave()
    {
        IsMouseDown = false;
        await HideOrShowArrrowIcons();
    }


    private string SnapTypeCssClassName = string.Empty;

    private async Task ArrowOnClick(string RightOrLeft)
    {
        CurrentScrollPosition = await js.InvokeAsync<double>("GetScrollLeft", carousel);
        if (RightOrLeft == "Left")
        {
            await js.InvokeVoidAsync("SetScrollLeft", carousel, CurrentScrollPosition - 180);
        }
        else
        {
            await js.InvokeVoidAsync("SetScrollLeft", carousel, CurrentScrollPosition + 180);
        }
        SnapTypeCssClassName = "SnapTypeCssClassName";
        await HideOrShowArrrowIcons();
    }

    private string LeftArrowCssCode = string.Empty;
    private string RightArrowCssCode = string.Empty;

    private async Task HideOrShowArrrowIcons()
    {
        CurrentScrollPosition = await js.InvokeAsync<double>("GetScrollLeft", carousel);

        int CarouselClientWidth = await js.InvokeAsync<int>("ElementClientWidth", carousel);
        int CarouselScrollWidth = await js.InvokeAsync<int>("ElementScrollWidth", carousel);
        int MaxScrollPosition = CarouselScrollWidth - CarouselClientWidth;

        LeftArrowCssCode = CurrentScrollPosition == 0 ? "visibility:hidden" : "visibility:visible";
        RightArrowCssCode = Math.Abs(CurrentScrollPosition - MaxScrollPosition) < 2 ? "visibility:hidden" : "visibility:visible";
    }   
}
    @*CarouselCode-End*@

@*LifeCycleEnds-Start*@
@code{
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // CarouselCode - Start
            await HideOrShowArrrowIcons();
            StateHasChanged();
            // CarouselCode - End
        }
    }
}
@*LifeCycleEnds-Start*@